#
# Travis CI
#
# @link https://docs.travis-ci.com/
# @link https://blog.khs1994.com/categories/CI/Travis-CI/
#

version: ~> 1.0

language: php

cache:
  - npm
  - directories:
    - cache
    - /var/lib/docker/builder

services:
  - docker
  # - rabbitmq
  # - memcached
  - redis-server
  - mysql
  # - mariadb
  # - postgresql
  # - mongodb

dist: xenial

php:
  # - 5.6
  # - 7.0
  # - 7.1
  # - 7.2
  - 7.3
  - 7.4

addons:
  apt:
    sources:
      - mysql-5.7-trusty
    packages:
      - mysql-server
      - mysql-client

#
# 设置数据库
#
# @link https://docs.travis-ci.com/user/database-setup/
#
# addons:
#   mariadb: '10.0'
#   postgresql: '9.4'
before_script:
  - sudo systemctl unmask mysql.service
  - sudo systemctl start mysql.service
  - sleep 15
  - sh -c "if [ '$DB' = 'postgres' ]; then psql -c 'DROP DATABASE IF EXISTS tests;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'postgres' ]; then psql -c 'DROP DATABASE IF EXISTS tests_tmp;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'postgres' ]; then psql -c 'CREATE DATABASE tests;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'postgres' ]; then psql -c 'CREATE DATABASE tests_tmp;' -U postgres; fi"
  - sh -c "if [ '$ENABLE_MONGODB' = 'enable' ]; then mongo mydb_test --eval 'db.createUser({user:"travis",pwd:"test",roles:["readWrite"]});'; fi"
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE IF NOT EXISTS pcit_test;'; fi"
  - if [ "$DB" = 'mysql' ]; then sudo mysql -e "use mysql; update user set authentication_string=PASSWORD('test') where User='root'; update user set plugin='mysql_native_password';FLUSH PRIVILEGES;"; fi
  - if [ "$DB" = 'mysql' ]; then sudo mysql_upgrade -u root -ptest; fi
  - if [ "$DB" = 'mysql' ]; then sudo service mysql restart; fi

jobs:
  include:
    - stage: test
      install:
        - curl -fsSL http://get.sensiolabs.org/sami.phar -o sami
        - chmod +x sami
        - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
      script:
        - composer install -q
        # - composer update -q
        - vendor/bin/phpunit --coverage-clover=coverage.xml
      after_success:
        - bash <(curl -s https://codecov.io/bash)
        - ./sami update .sami.php
      deploy:
        provider: pages
        skip-cleanup: true
        local-dir: build
        github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
        keep-history: true
        on:
          branch: master
    - stage: docs
      script:
        - cd docs
        - docker run -it --rm -v $PWD:/srv/gitbook-src khs1994/gitbook
        - sudo touch _book/CNAME
        - sudo echo "docs.ci.khs1994.com" | sudo tee _book/CNAME
      deploy:
        provider: pages
        repo: pcit-ce/docs
        skip-cleanup: true
        local-dir: docs/_book
        github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
        keep-history: true
        on:
          branch: master
    - stage: docker_build
      script:
        - docker --version
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get -y install docker-ce
        - docker --version
        - git clone --depth=1 https://github.com/pcit-ce/ui frontend
        - composer run docker:build
        # - composer run docker:push

stages:
  - test
  # - name: deploy
  #   if: tag =~ ^[0-9.]+$

env:
  global:
    - MONGODB=disable
    - CI_REDIS_HOST=localhost
    - CI_REDIS_NAME=15
    - CI_MYSQL_HOST=127.0.0.1
    - CI_MYSQL_USERNAME=root
    - CI_MYSQL_PASSWORD=test
    - CI_MYSQL_DATABASE=pcit_test
    - CI_WEBHOOKS_TOKEN=pcit
    - DOCKER_BUILDKIT=1
  matrix:
    # - DB=sqlite
    - DB=mysql
    # - DB=postgresql

#
# rabbitmq vhost / username guest password guest
#

#
# mysql 127.0.0.1 username-> root/travis 空密码
#
# memcached/redis -> localhost
#
