#
# @see https://github.com/khs1994-php/pcit/blob/master/docs/SUMMARY.md
#

language: php

clone:
  git:
    # image: plugins/git
    depth: 10
    # recursive: true
    # skip_verify: false
    # tags: false
    # submodule_override:
    #   hello-world: https://github.com/octocat/hello-world.git
    hosts:
      - "git.t.khs1994.com:192.168.199.100"

workspace:
  base: /app
  # path: .
  path: pcit

cache:
  directories:
    - cache
    # - vendor
    - .php_cs.cache

pipeline:
  # before_install:

  install:
    image: khs1994/php:${PHP_VERSION}-fpm-alpine
    commands:
      - pwd
      - composer install
      # - composer update

  script:
    image: khs1994/php:${PHP_VERSION}-fpm-alpine
    pull: true
    environment:
      - CI_REDIS_HOST=redis
      - CI_REDIS_PORT=6379
      - CI_REDIS_DATABASE=15
      - CI_MYSQL_HOST=mysql
      - CI_MYSQL_PORT=3306
      - CI_MYSQL_USERNAME=root
      - CI_MYSQL_PASSWORD=mytest
      - CI_MYSQL_DATABASE=test
      - CI_WEBHOOKS_TOKEN=pcit
    commands:
      - pwd
      - mv ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini.default ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini
      # 服务初始化需要时间，这里延迟执行
      - sleep 30
      - vendor/bin/phpunit --coverage-clover=coverage.xml
    when:
      # platform: linux/amd64
      # platform: [ linux/*, windows/amd64 ]

      # status: changed
      # status: [ failure, success ]

      # event: tag
      # event: [push, pull_request, tag, deployment]
      event: [push, pull_request, tag]

      # branch: master
      # branch: prefix/*
      # branch: [master, develop]
      # branch:
      #   include: [ master, release/* ]
      #   exclude: [ release/1.0.0, release/1.1.* ]
      # tag: 7.1.*

      # ^[0-9.]+$     1.2.0
      # ^[0-9.]+      1.2.0-rc
      # ^v([0-9.]+)$  v1.2.3

  test_platform:
    image: bash
    when:
      platform: Windows/amd64
    commands:
      - echo "Only run on Windows amd64"

  test_when_branch_include:
    image: bash
    when:
      branch:
        include: dev
    commands:
      - echo "Only run on dev branch"

  test_when_branch:
    image: bash
    when:
      branch: master
    commands:
      - echo "Only run on master branch"

  test_when_branch_exclude:
    image: bash
    when:
      branch:
        exclude: master
    commands:
      - echo "Don't run on master branch"

  # This is a build docker image demo，when tag push
  publish_php:
    image: khs1994/docker
    # registry: docker.khs1994.com
    repo: khs1994/php
    tags: 7.2.11-swarm-${CI_TAG}
    # target: php
    build_args:
      - a:1
    # dockerfile: Dockerfile
    # dockerfile: path/to/Dockerfile
    when:
      event: tag
      branch: alpha
    # please set env in settings
    # environment:
    # - DOCKER_USERNAME=username
    # - DOCKER_PASSWORD=password

  # This is success after demo
  after_success:
    image: khs1994/php:${PHP_VERSION}-fpm-alpine
    shell: bash
    when:
      status: success
    # please set env in settings
    environment:
      # - CODECOV_TOKEN=XXX
      - PCIT_OS_NAME=linux
    commands:
      - bash <(curl -s https://codecov.io/bash) -e PHP_VERSION,PCIT_OS_NAME

  php-cs-fixer:
    image: khs1994/php:7.2.11-fpm-alpine
    commands:
      - php-cs-fixer fix

  sami:
    image: khs1994/php:7.2.11-fpm-alpine
    when:
      status: success
    commands:
      - sami update .sami.php

  pages:
    image: khs1994/pages
    shell: bash
    when:
      status: success
    environment:
      - keep_history=true
      - target_branch=gh-pages
      - git_url=gitee.com/khs1994-php/pcit
      - local_dir=build
      - email=khs1994@khs1994.com
      - name=khs1994
      # - git_token: git_token

  upload_file:
    image: khs1994/tencent_cloud_cos:v4
    when:
      status: success
      event: tag
      branch: alpha
    file:
      README.md: pcit/tencent_cloud_cos_file_name_${PCIT_TAG}
      Dockerfile: pcit/tencent_cloud_cos_file_name2_${PCIT_TAG}
      # please set env by pcit env_var feature,don't set secret in .pcit.yml
      # environment:
      # - COS_V4_REGION=x
      # - COS_V4_APP_ID=x
      # - COS_V4_SECRET_ID=x
      # - COS_V4_SECRET_KEY=x
      # - COS_V4_BUCKET=x

  github_releases:
    image: khs1994/github_releases
    when:
      status: success
      event: tag
      branch: alpha
      # environment:
      # - GITHUB_TOKEN=x
    file:
      - "CHANGELOG.md"
      - "ROADMAP.md"

  after_failure:
    image: bash
    when:
      status: failure
    commands:
      - echo "build failure"

  #
  # This is build status changed demo,example prev success current failure
  #

  changed:
    image: bash
    when:
      status: changed
    commands:
      - echo "build changed"

services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ROOT_PASSWORD=mytest
    # entrypoint: [ "mysqld" ]
    commands: [ "--character-set-server=utf8mb4", "--default-authentication-plugin=mysql_native_password" ]

  # postgresql:
  #   image: postgres:${POSTGRESQL_VERSION}-alpine
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=test

  redis:
    image: redis:${REDIS_VERSION}-alpine
    commands: ["--bind", "0.0.0.0"]

  # mongodb:
  #   image: mongo:${MONGODB_VERSION}
  #   commands: [ --smallfiles ]

matrix:
  PHP_VERSION:
    - 7.2.11
    - 7.1.23
  NGINX_VERSION:
    - 1.15.5
  REDIS_VERSION:
    - 5.0.0
  MYSQL_VERSION:
    - 5.7.23
    # - 8.0.12
  MONGODB_VERSION:
    - 4.1.4
  POSTGRESQL_VERSION:
    - 10.5

# matrix:
#   include:
#     - PHP_VERSION: 7.2.11
#       MYSQL_VERSION: 5.7.23
#       REDIS_VERSION: 5.0.0
#     - PHP_VERSION: 7.1.23
#       MYSQL_VERSION: 5.7.23
#       REDIS_VERSION: 5.0.0

branches:
  include: [ master,dev ]
  exclude: test*
  # include: [ master, release/* ]
  # exclude: [ release/1.0.0, release/1.1.* ]

notifications:
  email:
    recipients:
      - khs1994@khs1994.com
    on_success: never # default: change
    on_failure: always # default: always

    # email:
    # - khs1994@khs1994.com
