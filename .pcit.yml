#
# @see https://docs.ci.khs1994.com/usage/
# @see http://www.ruanyifeng.com/blog/2016/07/yaml.html
#

# 不支持变量
language: php

# git 设置
clone:
  git:
    # image: plugins/git
    depth: 25 # default 25
    # recursive: true
    # skip_verify: false
    # tags: false
    # submodule_override:
    #   hello-world: https://github.com/octocat/hello-world.git
    hosts:
      - "git.t.khs1994.com:192.168.199.100"

# 工作目录
# 不支持变量
workspace: # or workdir
  base: /app
  # path: .
  path: pcit

# 缓存设置
# 不支持变量
cache:
  - cache
  - .php_cs.cache
  - .psalm
  # - vendor

# 构建步骤
steps:
  # 构建指令最简 字符串
  before_install: echo init script

  # 构建指令最简多个步骤 数组
  before_install_2: ["echo init script", "echo init script2"]

  # 构建指令最简多个步骤 数组 另一种写法
  before_install_3:
    - echo init script
    - echo init script2

  # 当构建步骤仅指定 run，可以使用以上三种方式进行简写
  before_install_4:
    run: ["echo init script"]

  before_install_5:
    env:
      - k=v
    run: ["echo init script", "echo $k"]

  python_shell:
    image: python:3.7-alpine
    shell: python
    run: |
      import os
      print(os.environ['PATH'])

  pwsh_shell:
    # image: mcr.microsoft.com/powershell:preview-alpine-3.10
    image: mcr.azk8s.cn/powershell:preview-alpine-3.10
    shell: pwsh
    run: |
      pwd
      write-host 1
      write-host 2

  node_shell:
    image: node:alpine
    shell: node
    run: |
      console.log(1)
      console.log(2)

  deno_shell:
    image: pcit/deno
    shell: deno
    if:
      branch: alpha
    run: |
      console.log(1)
      console.log(2)

  alpine:
    image: alpine
    run: |
      echo 1
      echo 2

  platform: uname -a

  install:
    # image: khs1994/php:7.3.0-composer-alpine
    run:
      - pwd
      - composer config -g cache-dir /tmp/pcit_cache/composer
      - composer config -g repo.packagist composer https://mirrors.aliyun.com/composer
      - /opt/pcit/toolkit/pcit-retry -t 2 --sleep 5 composer install
      # - composer update

  script:
    image: khs1994/php:${PHP_VERSION}-fpm-alpine
    pull: true # default is false # 不支持变量
    privileged: true # default is false # 不支持变量
    env:
      - CI_REDIS_HOST=redis
      - CI_REDIS_PORT=6379
      - CI_REDIS_DATABASE=15
      - CI_MYSQL_HOST=mysql
      - CI_MYSQL_PORT=3306
      - CI_MYSQL_USERNAME=root
      - CI_MYSQL_PASSWORD=test
      - CI_MYSQL_DATABASE=test
      - CI_WEBHOOKS_TOKEN=pcit
    run:
      - pwd
      - echo "zend_extension=xdebug" > ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini
      # 服务初始化需要时间，这里延迟执行
      - sleep 30
      - vendor/bin/phpunit --coverage-clover=coverage.xml
    if: # 不支持变量
      # platform: linux/amd64
      # platform: [ linux/*, windows/amd64 ]

      # status: changed
      # status: [ failure, success, changed ]

      event: [push, pull_request, tag]

      # branch: master
      # branch: prefix/*
      # branch: [master, develop]
      # branch:
      #   include: [ master, release/* ]
      #   exclude: [ release/1.0.0, release/1.1.* ]
      # tag: 7.1.*
      # ^[0-9.]+$     1.2.0
      # ^[0-9.]+      1.2.0-rc
      # ^v([0-9.]+)$  v1.2.3

  windows_only:
    image: bash
    if:
      platform: windows/amd64
    run: echo "Only run on Windows amd64"

  master_branch_only:
    image: bash
    if:
      branch: master
    run:
      - echo "Only run on master branch"

  dev_branch_only:
    image: bash
    if:
      branch:
        include: dev
    run:
      - echo "Only run on dev branch"

  master_branch_exclude:
    image: bash
    if:
      branch:
        exclude: master
    run:
      - echo "Don't run on master branch"

  dont_run_on_nightly:
    if:
      jobs:
        exclude:
        - PHP_VERSION: nightly
          NGINX_VERSION: 1.15.8
          REDIS_VERSION: 5.0.7
          MYSQL_VERSION: 5.7.29
    run: echo "don't run on php nightly version"

  plugin-demo:
    image: pcit/demo
    with:
      var: "1"
      var_array:
        - a=1
        - b=2
      var_obj:
        k1: v1
        k2: v2

  php-cs-fixer:
    image: khs1994/php-cs-fixer
    run: php-cs-fixer fix

  psalm: composer run psalm || true

  validate: ./bin/pcit validate

  sami:
    image: khs1994/sami
    if:
      status: success
      jobs:
        - PHP_VERSION: 7.4.3
          NGINX_VERSION: 1.15.8
          REDIS_VERSION: 5.0.7
          MYSQL_VERSION: 5.7.29
    run:
      - sami update .sami.php

  gitee_pages:
    image: pcit/pages
    if:
      status: success
      event: ["push"]
      jobs:
        - PHP_VERSION: 7.4.3
          NGINX_VERSION: 1.15.8
          REDIS_VERSION: 5.0.7
          MYSQL_VERSION: 5.7.29
    with:
      keep_history: true
      target_branch: gh-pages
      git_url: gitee.com/pcit-ce/sami-docs
      local_dir: build
      email: ${EMAIL}
      username: khs1994
      git_token: ${GITEE_TOKEN}
      message: "commit by pcit"

  github_pages:
    image: pcit/pages
    if:
      status:
        include: success
      event:
        include: ["push"]
      jobs:
        - PHP_VERSION: 7.4.3
          NGINX_VERSION: 1.15.8
          REDIS_VERSION: 5.0.7
          MYSQL_VERSION: 5.7.29
    with:
      keep_history: true
      # target_branch: gh-pages
      git_url: github.com/pcit-ce/sami-docs
      local_dir: build
      # email: ${EMAIL}
      # username: khs1994
      git_token: ${GITHUB_TOKEN}
      depth: "10"

  compile_phar:
    if:
      status: success
    run:
      - echo "[Phar]" >> /usr/local/etc/php/conf.d/phar.ini
      - echo "phar.readonly = Off" >> /usr/local/etc/php/conf.d/phar.ini
      - rm -rf vendor/pcit/*
      - composer compile:dump
      - ls -la vendor/bin
      - composer compile:pcit
      - composer compile:pcitd
      - ls -lah *.phar
      - php pcit.phar
      - php pcitd.phar
      - mkdir phar_dist
      - cp -a *.phar phar_dist
      - chmod +x phar_dist/*

  validate_by_phar:
    if:
      status: success
    run: |
      ./phar_dist/pcit.phar validate
      ./phar_dist/pcit.phar validate .pcit
      ./phar_dist/pcit.phar validate .

  s3:
    image: pcit/s3
    if:
      status: success
      event: ["push"]
      jobs:
        - PHP_VERSION: 7.4.3
          NGINX_VERSION: 1.15.8
          REDIS_VERSION: 5.0.7
          MYSQL_VERSION: 5.7.29
    with:
      region: ${S3_REGION}
      access_key_id: ${S3_ACCESS_KEY_ID}
      secret_access_key: ${S3_SECRET_ACCESS_KEY}
      bucket: ${S3_BUCKET}
      acl: public_read
      local_dir: phar_dist
      upload_dir: pcit-nightly
      # endpoint: https://storage.khs1994.com
      endpoint: ${S3_ENTRYPOINT}
      use_path_style_endpoint: true

  upload_artifact:
    # 暂不支持 download artifact
    image: pcit/upload-artifact
    if:
      status: success
      event: ["push"]
      jobs:
        - PHP_VERSION: 7.4.3
          NGINX_VERSION: 1.15.8
          REDIS_VERSION: 5.0.7
          MYSQL_VERSION: 5.7.29
    with:
      path: phar_dist
      name: pcit-nightly

  github-releases:
    image: pcit/github-release
    if:
      status: success
      event: push
      jobs:
        - PHP_VERSION: 7.4.3
          NGINX_VERSION: 1.15.8
          REDIS_VERSION: 5.0.7
          MYSQL_VERSION: 5.7.29
    with:
      token: ${GITHUB_TOKEN}
      # files: pcit.phar
      files:
        - pcit.phar
        - pcitd.phar
      repo: pcit-ce/pcit-release
      overwrite: true
      draft: false
      prerelease: true
      # target_commitish: 508c7456a3c9f778c378b94e95bd0f61056f1fe1
      target_commitish: refs/tags/nightly
      note: release nightly
      title: nightly
      checksum:
        - sha256
        - adler32

  codecov:
    image: pcit/codecov
    shell: bash
    if:
      status: success
    # please set env in with
    env:
      # - CODECOV_TOKEN=XXX
      - PCIT_OS_NAME=linux
      - VCS_COMMIT_ID=${PCIT_COMMIT}
      - VCS_BRANCH_NAME=${PCIT_BRANCH}
      - VCS_PULL_REQUEST=${PCIT_PULL_REQUEST}
      - VCS_SLUG=${PCIT_REPO_SLUG}
      - VCS_TAG=${PCIT_TAG}
      - CI_BUILD_URL=${PCIT_JOB_WEB_URL}
      - CI_BUILD_ID=${PCIT_BUILD_ID}
      - CI_JOB_ID=${PCIT_JOB_ID}
    run:
      # - bash <(curl -s https://codecov.io/bash) -e PHP_VERSION,PCIT_OS_NAME -n PCIT-${PCIT_JOB_ID} -K
      # -K           Remove color from the output
      - bash <(curl -s https://codecov.io/bash) -e PHP_VERSION,PCIT_OS_NAME -n PCIT-${PCIT_JOB_ID}

  test_pcit_self:
    env:
    - k=${PCIT_STEP_NAME}
    run: |
      echo ${k}
      echo ${public_key}
      echo ${LOG_HIDE_SECRET}

      echo "::set-env name={name}::{value}"
      echo "::set-env name=action_state::yellow"
      echo "::set-env name=MY_ENV::${k}"
      echo "::set-env name=ENV_SET_BY_STEP::`echo 1`"

      echo "::set-output name={name}::{value}"
      echo "::set-output name=action_fruit::strawberry"

      echo "::add-path::{path}"
      echo "::add-path::/path/to/dir"

      echo "::debug::{message}"
      echo "::debug file=app.js,line=1::Entered octocatAddition method"

      echo "::warning file={name},line={line},col={col}::{message}"
      echo "::warning file=app.js,line=1,col=5::Missing semicolon"

      echo "::error file={name},line={line},col={col}::{message}"
      echo "::error file=app.js,line=10,col=15::Something went wrong"

      echo "::add-mask::{value}"
      echo "::add-mask::Mona The Octocat"
      MY_NAME="Mona The Octocat"
      echo "::add-mask::$MY_NAME"

  test_pcit_self_after:
    run: |
      echo "test env command"
      echo ${MY_ENV:-}
      echo ${ENV_SET_BY_STEP}

      echo ${PATH}

      echo "test mask command"
      echo "hideValue: Mona The Octocat"
      echo "::add-mask::`echo hide_value`"
      echo "hideValue: hide_value"

      echo "test output command"
      echo ${OUTPUT_VALUE}
    env:
      - OUTPUT_VALUE={{steps.test_pcit_self.outputs}}

  after_success:
    - echo "build success"

  after_failure:
    image: bash
    # if:
    #   status: failure
    run:
      - echo "build failure"

  after_changed:
    image: bash
    # if:
    #   status: changed
    run:
      - echo "build changed"

  ping: ["ping -c 5 git.khs1994.io"]

  cron_only:
    run: ["echo only run on cron event"]
    if:
      event: cron

  coding_openapi:
    image: ecoding/apidoc-publisher
    env:
      - ACCESS_TOKEN=${CODING_OPENAPI_TOKEN}
      - APIDOC_TEAM=pcit
      - APIDOC_PROJECT=pcit
      - APIDOC_ID=1
      - APIDOC_RELEASE_TYPE=file
      - PCIT_URL=https://ci2.khs1994.com:10000
    run:
      - curl -fsSL ${PCIT_URL}/api/openapi?coding=true -o /opt/data.txt
      # - cp openapi/openapi.yaml /opt/data.txt
      - sh /my_shell/api_doc_release.sh
    if:
      status: success
      event: push
      branch: master
      jobs:
        - PHP_VERSION: 7.4.3
          NGINX_VERSION: 1.15.8
          REDIS_VERSION: 5.0.7
          MYSQL_VERSION: 5.7.29

  use_pcit_toolkit:
    run: |
      /opt/pcit/toolkit/pcit-retry -t 2 --sleep 5 'echo "y u no work"; false'
    if:
      status: success

# 配置服务
services:
  mysql:

  # mysql:
  #   image: mysql:${MYSQL_VERSION}
  #   environment:
  #     - MYSQL_DATABASE=test
  #     - MYSQL_ROOT_PASSWORD=test
  #   # 不支持变量
  #   entrypoint: [ "mysqld" ]
  #   # 不支持变量
  #   command: [ "--character-set-server=utf8mb4", "--default-authentication-plugin=mysql_native_password" ]

  # postgresql:
  #   image: postgres:${POSTGRESQL_VERSION}-alpine
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=test

  redis:

  # redis:
  #   image: redis:${REDIS_VERSION}-alpine
  #   command: ["--bind", "0.0.0.0"]

  # mongodb:
  #   image: mongo:${MONGODB_VERSION}
  #   command: [ --smallfiles ]

  custom_service:
    image: alpine
    env:
    - KKKK=${PCIT_JOB_ID}
    command:
    - sh
    - -c
    - |
      sleep 360000

# 变量矩阵
# 不支持变量
jobs:
  PHP_VERSION:
    - 7.4.3
    - 7.3.11
    - nightly
    # - 7.2.24
    # - 7.1.26
  NGINX_VERSION:
    - 1.15.8
  REDIS_VERSION:
    - 5.0.7
  MYSQL_VERSION:
    - 5.7.29
    # - 8.0.15
  # MONGODB_VERSION:
  # - 4.1.4
  # POSTGRESQL_VERSION:
  # - 10.5

# 不支持变量
# jobs:
#   include:
#     - PHP_VERSION: 7.2.24
#       MYSQL_VERSION: 5.7.29
#       REDIS_VERSION: 5.0.7
#     - PHP_VERSION: 7.1.26
#       MYSQL_VERSION: 5.7.29
#       REDIS_VERSION: 5.0.7

# 不支持变量
platform:
  - linux/amd64
  - linux/arm64

# 分支设置
# 不支持变量
# branch:  refs/heads/{branch-name}
# branch:  refs/heads/feature/*
# pr:      refs/pull/2/merge
# pr:      refs/pull/2/head
# tag:     refs/tags/{tag-name}
branches:
  include: [master, dev]
  # include: [ master, release/*, refs/tags/1.1.* ]
  # exclude: [ release/1.0.0, release/1.1.* ]

# 网络相关配置
networks:
  # 自定义 hosts
  hosts:
    - "git.khs1994.com:127.0.0.1"
    - "docker.khs1994.com:127.0.0.1"
    - "git.khs1994.io:127.0.0.1"

# 指定构建步骤的默认镜像
image: khs1994/php:7.4.3-composer-alpine
