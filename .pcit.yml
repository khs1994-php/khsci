#
# @see https://docs.ci.khs1994.com/usage/
# @see http://www.ruanyifeng.com/blog/2016/07/yaml.html
#

language: php

# git 设置
clone:
  git:
    # image: plugins/git
    depth: 25 # default 25
    # recursive: true
    # skip_verify: false
    # tags: false
    # submodule_override:
    #   hello-world: https://github.com/octocat/hello-world.git
    hosts:
      - "git.t.khs1994.com:192.168.199.100"

# 工作目录
workspace: # or workdir
  base: /app
  # path: .
  path: pcit

# 缓存设置
cache:
  - cache
  - .php_cs.cache
  # - vendor

# 构建步骤
steps: # pipeline
  # 构建指令最简 字符串
  before_install: echo init script

  # 构建指令最简多个步骤 数组
  before_install_2: ["echo init script", "echo init script2"]

  # 构建指令最简多个步骤 数组 另一种写法
  before_install_3:
    - echo init script
    - echo init script2

  # 当构建步骤仅指定 command(s)，可以使用以上三种方式进行简写
  before_install_4:
    run: ['echo init script']

  before_install_5:
    # image: or uses
    # environment: or env
    env:
      - k=v
    # command: or commands or run
    run: ['echo init script','echo $k']
    # setting: or settings or with
    # when: or if

  python_shell:
    image: python:3.6-alpine
    shell: python
    commands: |
      import os
      print(os.environ['PATH'])

  pwsh_shell:
    uses: mcr.microsoft.com/powershell:alpine-3.8
    shell: pwsh
    run: |
      write-host 1
      write-host 2

  alpine:
    image: alpine
    run: |
      echo 1
      echo 2

  install:
    # image: khs1994/php:7.3.0-composer-alpine
    command:
      - pwd
      - composer config -g cache-dir /tmp/pcit_cache/composer
      - composer config -g repo.packagist composer https://mirrors.aliyun.com/composer
      - composer install
      # - composer update

  script:
    image: khs1994/php:${PHP_VERSION}-fpm-alpine # ！支持变量！
    pull: true # default is false # 不支持变量
    privileged: true # default is false # 不支持变量
    environment: # 不支持变量
      - CI_REDIS_HOST=redis
      - CI_REDIS_PORT=6379
      - CI_REDIS_DATABASE=15
      - CI_MYSQL_HOST=mysql
      - CI_MYSQL_PORT=3306
      - CI_MYSQL_USERNAME=root
      - CI_MYSQL_PASSWORD=test
      - CI_MYSQL_DATABASE=test
      - CI_WEBHOOKS_TOKEN=pcit
    commands:
      - pwd
      - echo "zend_extension=xdebug" > ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini
      # 服务初始化需要时间，这里延迟执行
      - sleep 30
      - vendor/bin/phpunit --coverage-clover=coverage.xml
    when: # 不支持变量
      # platform: linux/amd64
      # platform: [ linux/*, windows/amd64 ]

      # status: changed
      # status: [ failure, success ]

      # event: tag
      # event: [push, pull_request, tag, cron]
      event: [push, pull_request, tag]

      # branch: master
      # branch: prefix/*
      # branch: [master, develop]
      # branch:
      #   include: [ master, release/* ]
      #   exclude: [ release/1.0.0, release/1.1.* ]
      # tag: 7.1.*

      # ^[0-9.]+$     1.2.0
      # ^[0-9.]+      1.2.0-rc
      # ^v([0-9.]+)$  v1.2.3

  windows_only:
    image: bash
    if:
      platform: Windows/amd64
    commands: echo "Only run on Windows amd64"

  master_branch_only:
    image: bash
    when:
      branch: master
    commands:
      - echo "Only run on master branch"

  dev_branch_only:
    image: bash
    when:
      branch:
        include: dev
    commands:
      - echo "Only run on dev branch"

  master_branch_exclude:
    image: bash
    when:
      branch:
        exclude: master
    commands:
      - echo "Don't run on master branch"

  docker_build:
    image: docker
    settings:
      # registry: docker.khs1994.com
      repo: pcit/pcit
      tags: 7.3.11-swarm-${PCIT_TAG}
      # target: php
      build_args:
        - a=1
      context: ./tests
      dockerfile: tests/Dockerfile
      # dockerfile: path/to/Dockerfile
      username: ${DOCKER_USERNAME}
      password: ${DOCKER_PASSWORD}
      dry_run: false
      purge: false
    when:
      event: push
      branch: alpha
      # event: tag

  docker_build_dont_push:
    image: docker
    settings:
      # registry: docker.khs1994.com
      repo: pcit/pcit
      tags: 7.3.11-swarm-${PCIT_TAG}
      # target: php
      build_args:
        - a=1
      context: ./tests
      dockerfile: tests/Dockerfile
      # dockerfile: path/to/Dockerfile
      username: ${DOCKER_USERNAME}
      password: ${DOCKER_PASSWORD}
      dry_run: true
      purge: false
    when:
      event: push
      # event: tag
      branch: alpha

  plugin-demo:
    image: pcit/demo
    settings:
      var: 1
      var_array:
        - a=1
        - b=2
      var_obj:
        k1: v1
        k2: v2

  php-cs-fixer:
    uses: khs1994/php-cs-fixer
    run: php-cs-fixer fix

  sami:
    image: khs1994/sami
    when:
      status: success
      matrix:
      - PHP_VERSION: 7.3.11
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    commands:
    - sami update .sami.php

  gitee_pages:
    image: pcit/pages
    if:
      status: success
      event: ['push']
      matrix:
      - PHP_VERSION: 7.3.11
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    with: # ！支持变量！
      keep_history: true
      target_branch: gh-pages
      git_url: gitee.com/pcit-ce/pcit
      local_dir: build
      email: ${EMAIL}
      username: khs1994
      git_token: ${GITEE_TOKEN}
      message: "commit by pcit"

  github_pages:
    image: pcit/pages
    when:
      status: success
      event: ['push']
      matrix:
      - PHP_VERSION: 7.3.11
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    settings:
      keep_history: true
      # target_branch: gh-pages
      git_url: github.com/pcit-ce/pcit
      local_dir: build
      # email: ${EMAIL}
      # username: khs1994
      git_token: ${GITHUB_TOKEN}
      depth: 10

  sync_git_runner:
    image: pcit/pages
    when:
      event: ['tag']
      status: success
      matrix:
      - PHP_VERSION: 7.3.11
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    settings:
      keep_history: true
      target_branch: master
      git_url: github.com/pcit-ce/runner
      local_dir: src/Runner
      git_token: ${GITHUB_TOKEN}
      depth: 10

  sync_git_plugin_s3:
    image: pcit/pages
    when:
      event: ['tag']
      status: success
      matrix:
      - PHP_VERSION: 7.3.11
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    settings:
      keep_history: true
      target_branch: master
      git_url: github.com/pcit-ce/plugin-s3
      local_dir: plugins/storage/s3
      git_token: ${GITHUB_TOKEN}
      depth: 10

  compile_phar:
    when:
      status: success
    run:
    - echo "[Phar]" >> /usr/local/etc/php/conf.d/phar.ini
    - echo "phar.readonly = Off" >> /usr/local/etc/php/conf.d/phar.ini
    - rm -rf vendor/pcit/*
    - composer compile:dump
    - composer compile:pcit
    - composer compile:pcitd
    - ls -lah *.phar
    - php pcit.phar
    - php pcitd.phar
    - mkdir phar_dist
    - cp -a *.phar phar_dist

  s3:
    image: pcit/s3
    when:
      status: success
      event: ['push']
      matrix:
      - PHP_VERSION: 7.3.11
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    # environment:
    settings:
      region: ${S3_REGION}
      access_key_id: ${S3_ACCESS_KEY_ID}
      secret_access_key: ${S3_SECRET_ACCESS_KEY}
      bucket: ${S3_BUCKET}
      acl: public_read
      local_dir: phar_dist
      upload_dir: pcit-nightly
      # endpoint: https://storage.khs1994.com
      endpoint: ${S3_ENTRYPOINT}
      use_path_style_endpoint: true

  github_releases:
    image: pcit/github_release
    when:
      status: success
      event: push
      matrix:
      - PHP_VERSION: 7.3.11
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
      # event: tag
    settings:
      token: ${GITHUB_TOKEN}
      # files: pcit.phar
      files:
        - pcit.phar
        - pcitd.phar
      repo: pcit-ce/pcit-release
      overwrite: true
      draft: true
      prerelease: true
      # target_commitish: 508c7456a3c9f778c378b94e95bd0f61056f1fe1
      target_commitish: refs/tags/nightly
      note: nightly
      title: nightly

  codecov:
    # image: khs1994/php:7.3.11-composer-alpine
    shell: bash
    when:
      status: success
    # please set env in settings
    environment:
      # - CODECOV_TOKEN=XXX
      - PCIT_OS_NAME=linux
    commands:
      - bash <(curl -s https://codecov.io/bash) -e PHP_VERSION,PCIT_OS_NAME

  after_success:
    - echo "build success"

  after_failure:
    image: bash
    # when:
    #   status: failure
    commands:
      - echo "build failure"

  after_changed:
    image: bash
    # when:
    #   status: changed
    commands:
      - echo "build changed"

  ping: ["ping -c 5 127.0.0.1"]

  cron_only:
    commands: ["echo only run on cron event"]
    when:
      event: cron

  actions_branch:
    image: github://actions/checkout@master
    with:
      fetch-depth: 1
      path: test_git
      token: ${GITHUB_TOKEN}

  cleanup_branch:
  - rm -rf /var/run/actions/actions/checkout

  actions_tag:
    image: github://actions/checkout@v2.0.0
    with:
      fetch-depth: 1
      path: test_git
      token: ${GITHUB_TOKEN}

  cleanup_tag:
  - rm -rf /var/run/actions/actions/checkout

  actions_sha:
    image: github://actions/checkout@c85684db76ba6ef08713c10cf4befe3318887415
    with:
      fetch-depth: 1
      path: test_git
      token: ${GITHUB_TOKEN}

# 配置服务
services:
  mysql:

  # mysql:
  #   image: mysql:${MYSQL_VERSION}
  #   environment:
  #     - MYSQL_DATABASE=test
  #     - MYSQL_ROOT_PASSWORD=test
  #   entrypoint: [ "mysqld" ]
  #   commands: [ "--character-set-server=utf8mb4", "--default-authentication-plugin=mysql_native_password" ]

  # postgresql:
  #   image: postgres:${POSTGRESQL_VERSION}-alpine
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=test

  redis:

  # redis:
  #   image: redis:${REDIS_VERSION}-alpine
  #   commands: ["--bind", "0.0.0.0"]

  # mongodb:
  #   image: mongo:${MONGODB_VERSION}
  #   commands: [ --smallfiles ]

# 变量矩阵
matrix:
  PHP_VERSION:
    - 7.3.11
    # - nightly
    - 7.2.24
    # - 7.1.26
  NGINX_VERSION:
    - 1.15.8
  REDIS_VERSION:
    - 5.0.3
  MYSQL_VERSION:
    - 5.7.24
    # - 8.0.15
  # MONGODB_VERSION:
    # - 4.1.4
  # POSTGRESQL_VERSION:
    # - 10.5

# matrix:
#   include:
#     - PHP_VERSION: 7.2.24
#       MYSQL_VERSION: 5.7.24
#       REDIS_VERSION: 5.0.3
#     - PHP_VERSION: 7.1.26
#       MYSQL_VERSION: 5.7.24
#       REDIS_VERSION: 5.0.3

# 分支设置
branches:
  include: [ master,dev ]
  exclude: test*
  # include: [ master, release/* ]
  # exclude: [ release/1.0.0, release/1.1.* ]

# 通知设置
notifications:
  email:
    recipients:
      - khs1994@khs1994.com
    on_success: never # default: change
    on_failure: always # default: always

    # email:
    # - khs1994@khs1994.com

# 网络相关配置
networks:
  # 自定义 hosts
  hosts:
    - "git.khs1994.com:127.0.0.1"
    - "docker.khs1994.com:127.0.0.1"

# 指定构建步骤的默认镜像
image: khs1994/php:7.3.11-composer-fpm
