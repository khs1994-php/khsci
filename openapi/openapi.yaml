openapi: 3.0.0
# servers:
#   - url: 'https://ci.khs1994.com/api'
#     description: PCIT-CE API
#   - url: 'https://{pcit-url}/api'
#     description: PCIT-EE API
#     variables:
#       pcit-url:
#         description: your pcit ee url
#         default: ci.khs1994.com
info:
  description: PCIT API
  version: 1.0.0
  title: PCIT API
  termsOfService: "https://github.com/pcit-ce/pcit/blob/master/docs/terms-of-service.md"
  contact:
    email: ci@khs1994.com
    name: pcit
    url: "https://ci.khs1994.com"
  license:
    name: MIT
    url: "https://github.com/pcit-ce/pcit/blob/master/LICENSE"
tags:
  - name: Builds
  - name: Builds.log
  - name: Builds.job
  - name: Organization
  - name: Repositories
  - name: Repositories.activate
  - name: Repositories.branches
  - name: Repositories.caches
  - name: Repositories.crons
  - name: Repositories.env_vars
  - name: Repositories.requests
  - name: Repositories.settings
  - name: Repositories.star
  - name: Repositories.status
  - name: Repositories.issues
  - name: User
  - name: User.beta_features
  - name: System
paths:
  /builds:
    get:
      tags:
        - Builds
      description: >-
        This returns a list of builds for the current user. The result is
        paginated. The default limit is 100.
      summary: list builds
      operationId: get-builds
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                description: build list
                items:
                  $ref: "#/components/schemas/builds"
              examples:
                example1:
                  value:
                    - id: "112"
                      branch: gh-pages
                      commit_id: 0fa67f2b1c0d59998b71035b402849f5075a3c60
                      tag: null
                      commit_message: "Deploy Git by PCIT https://ci.khs1994.com"
                      compare: >-
                        https://github.com/pcit-ce/pcit/compare/d492689de936...0fa67f2b1c0d
                      committer_name: pcit-ce
                      committer_username: pcit-deploy-robot
                      build_status: misconfigured
                      event_type: push
                      pull_request_number: null
                    - id: "111"
                      branch: master
                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd
                      tag: null
                      commit_message: |-
                        Support actions

                        Signed-off-by: Kang HuaiShuai
                      compare: >-
                        https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777
                      committer_name: Kang HuaiShuai
                      committer_username: khs1994
                      build_status: queued
                      event_type: push
                      pull_request_number: null
      parameters: []
  "/repo/{git_type}/{username}/{repo.name}/builds":
    get:
      tags:
        - Builds
      description: >-
        This returns a list of builds for an individual repository. The result
        is paginated. Each request will return 25 results.
      summary: find builds By Repo
      operationId: get-repo-builds
      parameters:
        - name: git_type
          in: path
          required: true
          schema:
            type: string
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                description: repo build list
                items:
                  $ref: "#/components/schemas/repo-builds"
              examples:
                example:
                  value:
                    - id: "112"
                      branch: gh-pages
                      commit_id: 0fa67f2b1c0d59998b71035b402849f5075a3c60
                      tag: null
                      commit_message: "Deploy Git by PCIT https://ci.khs1994.com"
                      compare: >-
                        https://github.com/pcit-ce/pcit/compare/d492689de936...0fa67f2b1c0d
                      committer_name: pcit-ce
                      committer_username: pcit-deploy-robot
                      build_status: misconfigured
                      event_type: push
                      pull_request_number: null
                      created_at: "1577892876"
                      finished_at: null
                    - id: "111"
                      branch: master
                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd
                      tag: null
                      commit_message: |-
                        Support actions

                        Signed-off-by: Kang HuaiShuai
                      compare: >-
                        https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777
                      committer_name: Kang HuaiShuai
                      committer_username: khs1994
                      build_status: queued
                      event_type: push
                      pull_request_number: null
                      created_at: "1577892253"
                      finished_at: null
  "/repo/{git_type}/{username}/{repo.name}/build/current":
    get:
      tags:
        - Builds
      summary: find builds By Repo Current
      description: find builds by repo current
      operationId: get-repo-current-build
      parameters:
        - name: git_type
          in: path
          required: true
          schema:
            type: string
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/build-detail"
              examples:
                example1:
                  value:
                    id: "112"
                    git_type: github
                    rid: "119219872"
                    event_type: push
                    build_status: misconfigured
                    branch: gh-pages
                    tag: null
                    pull_request_title: null
                    pull_request_number: null
                    pull_request_source: null
                    compare: >-
                      https://github.com/pcit-ce/pcit/compare/d492689de936...0fa67f2b1c0d
                    commit_id: 0fa67f2b1c0d59998b71035b402849f5075a3c60
                    commit_message: "Deploy Git by PCIT https://ci.khs1994.com"
                    committer_uid: null
                    committer_name: pcit-ce
                    committer_username: pcit-deploy-robot
                    committer_email: ci@khs1994.com
                    committer_pic: null
                    author_uid: null
                    author_name: pcit-ce
                    author_username: pcit-deploy-robot
                    author_email: ci@khs1994.com
                    author_pic: null
                    created_at: "1577892876"
                    finished_at: null
                    deleted_at: null
                    config: "[]"
                    action: null
                    check_suites_id: null
                    internal: "1"
                    private: "0"
                    unique_key: "0"
                    jobs: []
  "/build/{build.id}":
    get:
      tags:
        - Builds
      description: This returns a single build.
      summary: find single build
      operationId: get-single-build
      parameters:
        - name: build.id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/build-detail"
              examples:
                example1:
                  value:
                    id: "100"
                    git_type: github
                    rid: "230709793"
                    event_type: push
                    build_status: success
                    branch: master
                    tag: null
                    pull_request_title: null
                    pull_request_number: null
                    pull_request_source: null
                    compare: >-
                      https://github.com/pcit-plugins/pcit-github-release/compare/3f7567e0fc43...e66c9b3cdabb
                    commit_id: e66c9b3cdabb4572339d430f1ee33ae22a93a976
                    commit_message: >-
                      Sync from
                      pcit-ce/pcit@b4a29da40a05e79d646569ef35bd4c97ae5b69a8 by
                      PCIT
                    committer_uid: null
                    committer_name: khs1994
                    committer_username: khs1994
                    committer_email: khs1994@khs1994.com
                    committer_pic: null
                    author_uid: null
                    author_name: khs1994
                    author_username: khs1994
                    author_email: khs1994@khs1994.com
                    author_pic: null
                    created_at: "1577627893"
                    finished_at: "1577627957"
                    deleted_at: null
                    config: >-
                      {"steps":{"github_release":{"image":"pcit\/github_release","settings":{"token":"${GITHUB_TOKEN}","files":["Dockerfile","docker-entrypoint.sh"],"overwrite":true,"draft":true,"prerelease":true,"note":"nightly","title":"nightly","target_commitish":"refs\/tags\/nightly"}}}}
                    action: null
                    check_suites_id: null
                    internal: "1"
                    private: "0"
                    unique_key: "0"
                    jobs:
                      - id: "131"
                        allow_failure: "0"
                        state: success
                        started_at: "1577627938"
                        finished_at: "1577627957"
                        created_at: "1577627936"
                        updated_at: null
                        deleted_at: null
                        build_id: "100"
                        build_log: >-
                          {"clone":"2019-12-29T13:58:58.902387600Z + git
                          init\n2019-12-29T13:58:58.922934900Z Initialized empty
                          Git repository in
                          \/pcit-plugins\/pcit-github-release\/.git\/\n2019-12-29T13:58:58.922967400Z
                          + git remote add origin
                          https:\/\/github.com\/pcit-plugins\/pcit-github-release\n2019-12-29T13:58:58.938822500Z
                          + git fetch --no-tags origin
                          +refs\/heads\/master:\n2019-12-29T13:59:03.221357300Z
                          From
                          https:\/\/github.com\/pcit-plugins\/pcit-github-release\n2019-12-29T13:59:03.221376300Z
                          * branch            master     ->
                          FETCH_HEAD\n2019-12-29T13:59:03.227303300Z  * [new
                          branch]      master     ->
                          origin\/master\n2019-12-29T13:59:03.247332400Z + git
                          reset --hard -q
                          e66c9b3cdabb4572339d430f1ee33ae22a93a976\n2019-12-29T13:59:03.252979000Z
                          + git submodule update --init
                          --recursive","github_release":"2019-12-29T13:59:09.247502400Z
                          Release nightly not
                          found\n2019-12-29T13:59:10.092373700Z Successfully
                          created nightly
                          release\n2019-12-29T13:59:12.088994500Z Successfully
                          uploaded Dockerfile
                          artifact\n2019-12-29T13:59:12.821705700Z Successfully
                          uploaded docker-entrypoint.sh artifact"}
                        check_run_id: "366809624"
                        config: null
                        env_vars: "null"
                        container_config: null
  "/build/{build.id}/cancel":
    post:
      tags:
        - Builds
      description: >-
        This cancels a currently running build. It will set the build and
        associated jobs to "state": canceled.
      summary: cancel build
      operationId: cancel-single-build
      parameters:
        - name: build.id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: success
  "/build/{build.id}/restart":
    post:
      tags:
        - Builds
      description: This restarts a build that has completed or been canceled.
      summary: restart build
      operationId: restart-single-build
      responses:
        "200":
          description: success
      security: []
      parameters:
        - name: build.id
          in: path
          required: true
          schema:
            type: integer
  "/job/{job.id}/log":
    get:
      tags:
        - Builds.log
      summary: find log
      description: This returns a single build log.
      operationId: get-log
      parameters:
        - name: job.id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                description: logs
                properties:
                  steps:
                    type: string
                    description: step log
              examples:
                example:
                  value:
                    clone: >-
                      2019-12-28T12:50:09.012993700Z + git init

                      2019-12-28T12:50:09.048609700Z Initialized empty Git
                      repository in /app/pcit/.git/

                      2019-12-28T12:50:09.048638100Z + git remote add origin
                      https://github.com/pcit-ce/pcit

                      2019-12-28T12:50:09.064472600Z + git fetch --no-tags
                      --depth=25 origin +refs/heads/master:

                      2019-12-28T12:50:17.371708300Z From
                      https://github.com/pcit-ce/pcit

                      2019-12-28T12:50:17.371726500Z  * branch
                      master     -> FETCH_HEAD

                      2019-12-28T12:50:17.372141600Z  * [new branch]
                      master     -> origin/master

                      2019-12-28T12:50:17.377939100Z + git reset --hard -q
                      41de4b3bd1dba53c4fa55987bad9f57ce91e8f7d

                      2019-12-28T12:50:17.433871900Z + git submodule update
                      --init --recursive
    delete:
      tags:
        - Builds.log
      summary: delete log
      description: >-
        This removes the contents of a log. It gets replace with the message:
        Log removed at 2017-02-13 16:00:00 UTC.
      operationId: delete-log
      parameters:
        - name: job.id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: success
  /jobs:
    get:
      tags:
        - Builds.job
      summary: list jobs
      description: This returns a list of jobs a current user has access to.
      operationId: get-jobs
      responses:
        "200":
          description: successful operation
      parameters: []
  "/job/{job.id}":
    get:
      tags:
        - Builds.job
      summary: find single job
      description: This returns a single job.
      operationId: get-single-job-log
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jobs"
              examples:
                example1:
                  value:
                    id: "100"
                    allow_failure: "0"
                    state: success
                    started_at: "1577537406"
                    finished_at: "1577537724"
                    created_at: "1577537046"
                    updated_at: null
                    deleted_at: null
                    build_id: "52"
                    build_log: log string
                    check_run_id: "366020520"
                    config: null
                    env_vars: >-
                      {"PHP_VERSION":"7.2.24","NGINX_VERSION":"1.15.8","REDIS_VERSION":"5.0.3","MYSQL_VERSION":"5.7.24"}
                    container_config: null
      parameters:
        - name: job.id
          in: path
          required: true
          schema:
            type: integer
  "/job/{job.id}/cancel":
    post:
      tags:
        - Builds.job
      summary: cancel job
      description: This cancels a currently running job.
      operationId: cancel-job
      responses:
        default:
          description: successful operation
      parameters:
        - name: job.id
          in: path
          required: true
          schema:
            type: integer
  "/job/{job.id}/restart":
    post:
      tags:
        - Builds.job
      summary: restart job
      description: This restarts a job that has completed or been canceled.
      operationId: restart-job
      parameters:
        - name: job.id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: success
  /orgs:
    get:
      tags:
        - Organization
      summary: list orgs
      description: This returns a list of organizations the current user is a member of.
      operationId: get-orgs
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                description: ""
                items:
                  $ref: "#/components/schemas/org"
              examples:
                example1:
                  value:
                    - id: "3"
                      git_type: github
                      uid: "31106763"
                      name: null
                      username: khs1994-website
                      email: null
                      pic: "https://avatars2.githubusercontent.com/u/31106763?v=4"
                      access_token: null
                      refresh_token: null
                      org_admin: '["16733187"]'
                      type: org
                      installation_id: "0"
                    - id: "4"
                      git_type: github
                      uid: "31461768"
                      name: null
                      username: khs1994-php
                      email: null
                      pic: "https://avatars0.githubusercontent.com/u/31461768?v=4"
                      access_token: null
                      refresh_token: null
                      org_admin: '["16733187"]'
                      type: org
                      installation_id: "0"
      parameters: []
  "/org/{git_type}/{organization.name}":
    get:
      tags:
        - Organization
      summary: find org
      description: This returns an individual organization.
      operationId: get-org
      parameters:
        - name: git_type
          in: path
          required: true
          schema:
            type: string
        - name: organization.name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/org"
              examples:
                example1:
                  value:
                    id: "2"
                    git_type: github
                    uid: "45250309"
                    name: pcit-ce
                    username: pcit-ce
                    email: ci@khs1994.com
                    pic: "https://avatars3.githubusercontent.com/u/45250309?v=4"
                    access_token: null
                    refresh_token: null
                    org_admin: '["16733187"]'
                    type: org
                    installation_id: "469299"
  /repos:
    get:
      tags:
        - Repositories
      summary: list repos
      description: This returns a list of repositories the current user has access to.
      parameters: []
      operationId: get-repos
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                description: ""
                items: {}
              examples:
                example1:
                  value: []
  "/repos/{git_type}/{username}":
    get:
      tags:
        - Repositories
      summary: list owner repo
      description: This returns a list of repositories an owner has access to.
      parameters:
        - name: git_type
          in: path
          required: true
          schema:
            type: string
        - name: username
          in: path
          required: true
          schema:
            type: string
      operationId: get-owner-repo
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                description: ""
                items: {}
              examples:
                example1:
                  value:
                    - rid: "119219872"
                      repo_full_name: pcit-ce/pcit
                      default_branch: master
                      git_type: github
                      webhooks_status: 1
                      build_id: "111"
                      build_status: queued
                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd
                    - rid: "230623025"
                      repo_full_name: pcit-ce/pcit-release
                      default_branch: master
                      git_type: github
                      webhooks_status: 1
                      build_id: null
                      build_status: null
                      commit_id: "0"
  "/repo/{git_type}/{username}/{repo.name}":
    get:
      tags:
        - Repositories
      summary: find repo
      description: This returns an individual repository.
      parameters:
        - name: git_type
          in: path
          required: true
          schema:
            type: string
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-repo
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                description: ""
                properties: {}
              examples:
                example1:
                  value:
                    id: "1"
                    git_type: github
                    rid: "119219872"
                    repo_full_name: pcit-ce/pcit
                    webhooks_status: null
                    build_activate: null
                    repo_admin: '["16733187"]'
                    repo_collaborators: null
                    default_branch: master
                    last_sync: "1577893114"
                    secrets: null
                    auto_merge: null
  "/repo/{username}/{repo.name}/activate":
    post:
      tags:
        - Repositories.activate
      summary: activate a repository
      description: "This will activate a repository, allowing its tests to be run on PCIT."
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: activate-repo
      responses:
        "200":
          description: success
  "/repo/{username}/{repo.name}/deactivate":
    post:
      tags:
        - Repositories.activate
      summary: deactivate a repository
      description: >-
        This will deactivate a repository, preventing any tests from running on
        PCIT.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: deactivate-repo
      responses:
        "200":
          description: success
  "/repo/{git_type}/{username}/{repo.name}/branches":
    get:
      tags:
        - Repositories.branches
      summary: list branches
      description: This will return a list of branches a repository has on GitHub.
      parameters:
        - name: git_type
          in: path
          required: true
          schema:
            type: string
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-branches
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                description: ""
                items: {}
              examples:
                example1:
                  value:
                    - gh-pages
                    - master
  "/repo/{git_type}/{username}/{repo.name}/branch/{branch.name}":
    get:
      tags:
        - Repositories.branches
      summary: find branch
      description: This will return information about an individual branch.
      parameters:
        - name: git_type
          in: path
          required: true
          schema:
            type: string
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: branch.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-branch
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                description: ""
                items:
                  $ref: "#/components/schemas/builds"
              examples:
                example1:
                  value:
                    - id: "111"
                      branch: master
                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd
                      tag: null
                      commit_message: |-
                        Support actions

                        Signed-off-by: Kang HuaiShuai
                      compare: >-
                        https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777
                      committer_name: Kang HuaiShuai
                      committer_username: khs1994
                      build_status: queued
                      event_type: push
                    - id: "109"
                      branch: master
                      commit_id: 6746c883155ebb80014904211de818ee9c625338
                      tag: null
                      commit_message: |-
                        Support actions

                        Signed-off-by: Kang HuaiShuai
                      compare: >-
                        https://github.com/pcit-ce/pcit/compare/4dfb85a30c05...6746c883155e
                      committer_name: Kang HuaiShuai
                      committer_username: khs1994
                      build_status: failure
                      event_type: push
  "/repo/{username}/{repo.name}/caches":
    get:
      tags:
        - Repositories.caches
      summary: list repo caches
      description: This returns all the caches for a repository.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-repo-caches
      responses:
        "200":
          description: success
    delete:
      tags:
        - Repositories.caches
      summary: delete repo all caches
      description: This deletes all caches for a repository.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: delete-repo-caches
      responses:
        "200":
          description: success
  "/repo/{username}/{repo.name}/crons":
    get:
      tags:
        - Repositories.crons
      summary: get repo crons
      description: This returns a list of crons for an individual repository.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-repo-crons
      responses:
        "200":
          description: success
  "/cron/{cron.id}":
    get:
      tags:
        - Repositories.crons
      summary: get single cron
      description: This returns a single cron.
      parameters:
        - name: cron.id
          in: path
          required: true
          schema:
            type: integer
      operationId: get-cron
      responses:
        "200":
          description: success
    delete:
      tags:
        - Repositories.crons
      summary: delete single cron
      description: This deletes a single cron.
      parameters:
        - name: cron.id
          in: path
          required: true
          schema:
            type: integer
      operationId: delete-cron
      responses:
        "200":
          description: success
  "/repo/{username}/{repo.name}/branch/{branch.name}/cron":
    get:
      tags:
        - Repositories.crons
      summary: get repo branch cron
      description: >-
        This returns the cron set for the specified branch for the specified
        repository.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: branch.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-repo-branch-cron
      responses:
        "200":
          description: success
    post:
      tags:
        - Repositories.crons
      summary: create repo branch cron
      description: >-
        This creates a cron on the specified branch for the specified
        repository. Content-Type MUST be set in the header and an interval for
        the cron MUST be specified as a parameter.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: branch.name
          in: path
          required: true
          schema:
            type: string
      operationId: create-repo-branch-cron
      responses:
        "200":
          description: success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cron.interval:
                  type: string
                  description: "interval, daily, weekly or monthly"
                cron.dont_run_if_recent_build_exists:
                  type: boolean
                  description: dont_run_if_recent_build_exists
              required:
                - cron.interval
                - cron.dont_run_if_recent_build_exists
            examples:
              example1:
                value:
                  cron.interval: daily
                  cron.dont_run_if_recent_build_exists: true
  "/repo/{username}/{repo.name}/env_vars":
    get:
      tags:
        - Repositories.env_vars
      summary: repo env list
      description: >-
        This returns a list of environment variables for an individual
        repository.
      parameters:
        - name: username
          description: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-repo-env-list
      responses:
        "200":
          description: success
          content:
            application/json:
              schema: {}
              examples:
                example1:
                  value:
                    - id: "33"
                      git_type: github
                      rid: "119219872"
                      name: ACCESS_TOKEN
                      value: abcdefg
                      public: "0"
                    - id: "4"
                      git_type: github
                      rid: "119219872"
                      name: CODECOV_TOKEN
                      value: abcdefg
                      public: "0"
    post:
      tags:
        - Repositories.env_vars
      summary: create repo env
      description: This creates an environment variable for an individual repository.
      parameters:
        - name: username
          description: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: create-repo-env
      responses:
        "200":
          description: success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                env_var.name:
                  type: string
                env_var.value:
                  type: string
                env_var.public:
                  type: string
            examples:
              example1:
                value:
                  env_var.name: k1
                  env_var.value: v1
                  env_var.public: "0"
  "/repo/{username}/{repo.name}/env_var/{env_var.id}":
    get:
      tags:
        - Repositories.env_vars
      summary: get repo single env
      description: This returns a single environment variable.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: env_var.id
          in: path
          required: true
          schema:
            type: integer
      operationId: get-repo-single-env
      responses:
        "200":
          description: success
          content:
            application/json:
              schema: {}
              examples:
                example1:
                  value:
                    id: "4"
                    git_type: github
                    rid: "119219872"
                    name: CODECOV_TOKEN
                    value: abcdef
                    public: "0"
    post:
      tags:
        - Repositories.env_vars
      summary: update repo single env
      description: This updates a single environment variable.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: env_var.id
          in: path
          required: true
          schema:
            type: integer
      operationId: update-repo-single-env
      responses:
        "200":
          description: success
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  env_var.name: FOO
                  env_var.value: bar
                  env_var.public: false
    delete:
      tags:
        - Repositories.env_vars
      summary: delete repo single env
      description: This deletes a single environment variable.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: env_var.id
          in: path
          required: true
          schema:
            type: integer
      operationId: delete repo single env
      responses:
        "200":
          description: success
  "/repo/{username}/{repo.name}/requests":
    get:
      tags:
        - Repositories.requests
      summary: get repo request list
      description: This will return a list of requests belonging to a repository.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-repo-request-list
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/repo-builds"
              examples:
                example1:
                  value:
                    - id: "112"
                      branch: gh-pages
                      commit_id: 0fa67f2b1c0d59998b71035b402849f5075a3c60
                      tag: null
                      commit_message: "Deploy Git by PCIT https://ci.khs1994.com"
                      compare: >-
                        https://github.com/pcit-ce/pcit/compare/d492689de936...0fa67f2b1c0d
                      committer_name: pcit-ce
                      committer_username: pcit-deploy-robot
                      build_status: misconfigured
                      event_type: push
                      pull_request_number: null
                      created_at: "1577892876"
                      finished_at: null
                    - id: "111"
                      branch: master
                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd
                      tag: null
                      commit_message: |-
                        Support actions

                        Signed-off-by: Kang HuaiShuai
                      compare: >-
                        https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777
                      committer_name: Kang HuaiShuai
                      committer_username: khs1994
                      build_status: queued
                      event_type: push
                      pull_request_number: null
                      created_at: "1577892253"
                      finished_at: null
    post:
      tags:
        - Repositories.requests
      summary: create repo single request
      description: >-
        This will create a request for an individual repository, triggering a
        build to run on PCIT.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: create-repo-single-request
      responses:
        "200":
          description: success
  "/repo/{username}/{repo.name}/request/{request.id}":
    get:
      tags:
        - Repositories.requests
      summary: get repo single request
      description: This will return information about an individual request.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: request.id
          in: path
          required: true
          schema:
            type: integer
      operationId: get-repo-single-request
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/request"
              examples:
                example1:
                  value:
                    id: "111"
                    git_type: github
                    rid: "119219872"
                    event_type: push
                    build_status: queued
                    branch: master
                    tag: null
                    pull_request_title: null
                    pull_request_number: null
                    pull_request_source: null
                    compare: >-
                      https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777
                    commit_id: f807efaa677757682aa7a3f226d3e799086e90dd
                    commit_message: |-
                      Support actions

                      Signed-off-by: Kang HuaiShuai
                    committer_uid: null
                    committer_name: Kang HuaiShuai
                    committer_username: khs1994
                    committer_email: khs1994@khs1994.com
                    committer_pic: null
                    author_uid: null
                    author_name: Kang HuaiShuai
                    author_username: khs1994
                    author_email: khs1994@khs1994.com
                    author_pic: null
                    created_at: "1577892253"
                    finished_at: null
                    deleted_at: null
                    config: "{}"
                    action: null
                    check_suites_id: null
                    internal: "1"
                    private: "0"
                    unique_key: "0"
  "/repo/{username}/{repo.name}/settings":
    get:
      tags:
        - Repositories.settings
      summary: get repo setting list
      description: This returns a list of the settings for that repository.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-repo-setting-list
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  build_pushes: {}
                  build_pull_requests: {}
                  maximum_number_of_builds: {}
                  auto_cancel_branch_builds: {}
                  auto_cancel_pull_request_builds: {}
              examples:
                example1:
                  value:
                    build_pushes: "1"
                    build_pull_requests: "1"
                    maximum_number_of_builds: "1"
                    auto_cancel_branch_builds: "0"
                    auto_cancel_pull_request_builds: "0"
  "/repo/{username}/{repo.name}/setting/{setting.name}":
    get:
      tags:
        - Repositories.settings
      summary: get repo single setting
      description: This returns a single setting.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: setting.name
          in: path
          required: true
          schema:
            type: string
      operationId: get-repo-single-setting
      responses:
        "200":
          description: success
          content: {}
    post:
      tags:
        - Repositories.settings
      summary: update repo single setting
      description: This updates a single setting.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: setting.name
          in: path
          required: true
          schema:
            type: string
      operationId: update-repo-single-setting
      responses:
        "200":
          description: success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                setting.value:
                  type: string
            examples:
              example1:
                value:
                  setting.value: "1"
  "/repo/{username}/{repo.name}/star":
    post:
      tags:
        - Repositories.star
      summary: star a repo
      description: This will star a repository based on the currently logged in user.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: star-repo
      responses:
        "200":
          description: success
  "/repo/{username}/{repo.name}/unstar":
    post:
      tags:
        - Repositories.star
      summary: unstar a repo
      description: This will unstar a repository based on the currently logged in user.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
      operationId: unstar-repo
      responses:
        "200":
          description: success
  "/repo/{username}/{repo.name}/issues/translate/{issue.number}":
    patch:
      tags:
        - Repositories.issues
      summary: translate issue title
      description: translate issue title
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: repo.name
          in: path
          required: true
          schema:
            type: string
        - name: issue.number
          in: path
          required: true
          schema:
            type: integer
      operationId: translate-issue-title
      responses:
        "200":
          description: success
  /user/token:
    post:
      tags:
        - User
      summary: get token
      description: get token by git username and password
      parameters: []
      operationId: get-token
      responses:
        "200":
          description: success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                git_type:
                  type: string
                username:
                  type: string
                password:
                  type: string
            examples:
              example1:
                value:
                  git_type: github
                  username: username
                  password: MyPassword
  /user:
    get:
      tags:
        - User
      summary: get current user info
      description: This will return information about the current user.
      parameters: []
      operationId: get-current-user-info
      responses:
        "200":
          description: success
          content:
            application/json:
              schema: {}
              examples:
                example1:
                  value:
                    id: "1"
                    git_type: github
                    uid: "16733187"
                    name: null
                    username: khs1994
                    email: khs1994@khs1994.com
                    pic: "https://avatars2.githubusercontent.com/u/16733187?v=4"
                    access_token: abcdefg
                    refresh_token: null
                    org_admin: null
                    type: user
                    installation_id: "0"
  "/user/{git_type}/{username}":
    get:
      tags:
        - User
      summary: get a user info
      description: This will return information about an individual user.
      parameters:
        - name: git_type
          in: path
          required: true
          schema:
            type: string
        - name: username
          in: path
          required: true
          schema:
            type: string
      operationId: get-user-info
      responses:
        "200":
          description: sucess
          content:
            application/json:
              schema: {}
              examples:
                example1:
                  value:
                    id: "1"
                    git_type: github
                    uid: "16733187"
                    name: null
                    username: khs1994
                    email: khs1994@khs1994.com
                    pic: "https://avatars2.githubusercontent.com/u/16733187?v=4"
                    access_token: abcdefg
                    refresh_token: null
                    org_admin: null
                    type: user
                    installation_id: "0"
  /user/sync:
    post:
      tags:
        - User
      summary: sync user info
      description: This triggers a sync on a user's account with their GitHub account.
      parameters: []
      operationId: sync-user-info
      responses:
        "200":
          description: success
  "/user/{git_type}/{owner.login}/active":
    get:
      tags:
        - User
      summary: get current user active repo list
      description: >-
        A list of all the builds in an "active" state, either created or
        started.
      parameters:
        - name: git_type
          in: path
          required: true
          schema:
            type: string
        - name: owner.login
          in: path
          required: true
          schema:
            type: string
      operationId: ""
      responses:
        "200":
          description: success
  "/user/{user.name}/beta_features":
    get:
      tags:
        - User.beta_features
      summary: get user beta features
      description: This will return a list of beta features available to a user.
      parameters:
        - name: user.name
          in: path
          required: true
          schema:
            type: string
      operationId: ""
      responses:
        "200":
          description: success
  "/user/{user.name}/beta_feature/{beta_feature.id}":
    patch:
      tags:
        - User.beta_features
      summary: update user beta features
      description: This will update a user's beta_feature.
      parameters:
        - name: user.name
          in: path
          required: true
          schema:
            type: string
        - name: beta_feature.id
          in: path
          required: true
          schema:
            type: string
      operationId: ""
      responses:
        "200":
          description: success
    delete:
      tags:
        - User.beta_features
      summary: delete user beta features
      description: This will delete a user's beta feature.
      parameters:
        - name: user.name
          in: path
          required: true
          schema:
            type: string
        - name: beta_feature.id
          in: path
          required: true
          schema:
            type: string
      operationId: ""
      responses:
        "200":
          description: success
  /ci/oauth_client_id:
    get:
      tags:
        - System
      summary: get oauth client id
      description: get oauth client id
      parameters: []
      operationId: ""
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
              examples:
                example1:
                  value:
                    url: >-
                      https://github.com/settings/connections/applications/35cb33c242b808b26270
  /ci/pending:
    get:
      tags:
        - System
      summary: get pending jobs number
      description: get pending jobs number
      parameters: []
      operationId: ""
      responses:
        "200":
          description: success
  "/ci/github_app_installation/{uid}":
    get:
      tags:
        - System
      summary: get a user or org github app installation url
      description: get a user or org github app installation url
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: integer
      operationId: ""
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
              examples:
                example1:
                  value:
                    url: >-
                      https://github.com/apps/pcit-ce2/installations/new/permissions?suggested_target_id=31106763
  "/ci/github_app_settings/{org_name}":
    get:
      tags:
        - System
      summary: get pcit github app settings url
      description: get pcit github app settings url
      parameters:
        - name: org_name
          in: path
          required: true
          description: org name
          schema:
            type: string
      operationId: ""
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
              examples:
                example1:
                  value:
                    url: >-
                      https://github.com/organizations/pcit-ce/settings/installations
  /ci/about:
    get:
      tags:
        - System
      summary: get pcit about info
      description: get pcit about info
      parameters: []
      operationId: ""
      responses:
        "200":
          description: success
  /ci/changelog:
    get:
      tags:
        - System
      summary: get pcit about changelog
      description: get pcit about changelog
      parameters: []
      operationId: ""
      responses:
        "200":
          description: success
  /metrics:
    get:
      tags:
        - System
      summary: get pcit metrics
      description: get pcit metrics
      parameters: []
      operationId: ""
      responses:
        "200":
          description: success
          content:
            text/plain:
              schema:
                type: string
  /healthz:
    get:
      tags:
        - System
      summary: get pcit healthz
      description: get pcit healthz
      parameters: []
      operationId: ""
      responses:
        "200":
          description: success
          content:
            text/plain:
              schema:
                type: string
              examples:
                example1:
                  value: ok
  /readyz:
    get:
      tags:
        - System
      summary: get pcit readyz
      description: get pcit readyz
      parameters: []
      operationId: ""
      responses:
        "200":
          description: success
          content:
            text/plain:
              schema:
                type: string
              examples:
                example1:
                  value: ok
  /livez:
    get:
      tags:
        - System
      summary: get pcit livez
      description: get pcit livez
      parameters: []
      operationId: ""
      responses:
        "200":
          description: success
          content:
            text/plain:
              schema:
                type: string
              examples:
                example1:
                  value: ok
  /openapi:
    get:
      tags:
        - System
      summary: openapi
      description: return openapi json
      parameters:
        - name: coding
          description: openapi for coding.net
          in: query
          required: false
          schema:
            type: boolean
            default: false
      operationId: openapi
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                description: openapi
  /openapi/v3:
    get:
      tags:
        - System
      summary: openapi v3
      description: return openapi json
      parameters:
        - name: coding
          description: openapi for coding.net
          in: query
          required: false
          schema:
            type: boolean
            default: false
      operationId: openapi
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                description: openapi
  /validate:
    post:
      tags:
        - System
      summary: validate .pcit.yml
      description: validate .pcit.yml
      operationId: validate
      requestBody:
        content:
          plain/text:
            schema:
              type: string
            examples:
              example1:
                value: |-
                  language: php

                  steps:
                    script: echo exec script
          application/json:
            schema:
              type: string
            examples:
              example:
                value: |-
                  {"language": "php","steps":{"script":"echo exec script"}}
      responses:
        "200":
          description: validate result
          content:
            plain/text:
              schema:
                type: string
                description: validate passed
              examples:
                example1:
                  value: "ok"
            application/json:
              schema:
                type: array
                description: validate error
                items:
                  type: object
              examples:
                example1:
                  value:
                    - steps: The property steps is required
                    - "": The property lanuage is not defined and the definition does not allow additional properties
                    - "": The property test is not defined and the definition does not allow additional properties
components:
  parameters:
    org_name:
      name: org_name
      in: path
      description: org name
      required: true
      schema:
        type: string
  schemas:
    builds:
      title: build list
      type: object
      description: builds list
      properties:
        id:
          type: integer
          description: builds id
        branch:
          type: string
          description: trigger branch
        commit_id:
          type: string
          description: commit sha
        tag:
          type: string
          description: tag name
        commit_message:
          type: string
          description: commit message
        compare:
          type: string
          description: compare url
        commiter_name:
          type: string
          description: committer name
        committer_username:
          type: string
          description: committer username
        build_status:
          type: string
          description: build status
        event_type:
          type: string
          description: event type
        pull_request_number:
          type: integer
          description: pull request number
    repo-builds:
      title: repo build list
      description: repo build list
      type: object
      properties:
        id:
          type: integer
          description: builds id
        branch:
          type: string
          description: trigger branch
        commit_id:
          type: string
          description: commit sha
        tag:
          type: string
          description: tag name
        commit_message:
          type: string
          description: commit message
        compare:
          type: string
          description: compare url
        commiter_name:
          type: string
          description: committer name
        committer_username:
          type: string
          description: committer username
        build_status:
          type: string
          description: build status
        event_type:
          type: string
          description: event type
        pull_request_number:
          type: integer
          description: pull request number
        created_at:
          type: integer
          description: created time
        finished_at:
          type: integer
          description: finished time
    build-detail:
      title: build detail
      description: build detail
      type: object
      properties:
        id:
          type: integer
          description: build id
        git_type:
          type: string
          description: git type
        rid:
          type: integer
          description: repo id
        event_type:
          type: string
          description: event type
        build_status:
          type: string
          description: build status
        branch:
          type: string
          description: branch
        tag:
          type: string
          description: tag name
        pull_request_title:
          type: string
          description: pull request title
        pull_request_number:
          type: integer
          description: pull request number
        pull_request_source:
          type: string
          description: pull request source repo
        compare:
          type: string
          description: compare url
        commit_id:
          type: string
          description: commit sha
        commit_message:
          type: string
          description: commit message
        committer_uid:
          type: integer
          description: committer uid
        committer_name:
          type: string
          description: committer name
        committer_username:
          type: string
          description: committer username
        committer_email:
          type: string
          description: committer email
        committer_pic:
          type: string
          description: committer pic
        author_uid:
          type: integer
          description: author uid
        author_name:
          type: string
          description: author name
        author_username:
          type: string
          description: author username
        author_email:
          type: string
          description: author email
        author_pic:
          type: string
          description: author pic
        created_at:
          type: integer
          description: create time
        finished_at:
          type: integer
          description: finish time
        deleted_at:
          type: integer
          description: delete time
        config:
          type: string
          description: pcit config string
        action:
          type: string
          description: action
        check_suites_id:
          type: integer
          description: check suites id
        internal:
          type: integer
          description: internal
        private:
          type: boolean
          description: is private
        unique_key:
          type: string
          description: unique key
        jobs:
          type: array
          items:
            $ref: "#/components/schemas/jobs"
    request:
      title: request
      type: object
      properties:
        id:
          type: integer
          description: build id
        git_type:
          type: string
          description: git type
        rid:
          type: integer
          description: repo id
        event_type:
          type: string
          description: event type
        build_status:
          type: string
          description: build status
        branch:
          type: string
          description: branch
        tag:
          type: string
          description: tag name
        pull_request_title:
          type: string
          description: pull request title
        pull_request_number:
          type: integer
          description: pull request number
        pull_request_source:
          type: string
          description: pull request source repo
        compare:
          type: string
          description: compare url
        commit_id:
          type: string
          description: commit sha
        commit_message:
          type: string
          description: commit message
        committer_uid:
          type: integer
          description: committer uid
        committer_name:
          type: string
          description: committer name
        committer_username:
          type: string
          description: committer username
        committer_email:
          type: string
          description: committer email
        committer_pic:
          type: string
          description: committer pic
        author_uid:
          type: integer
          description: author uid
        author_name:
          type: string
          description: author name
        author_username:
          type: string
          description: author username
        author_email:
          type: string
          description: author email
        author_pic:
          type: string
          description: author pic
        created_at:
          type: integer
          description: create time
        finished_at:
          type: integer
          description: finish time
        deleted_at:
          type: integer
          description: delete time
        config:
          type: string
          description: pcit config string
        action:
          type: string
          description: action
        check_suites_id:
          type: integer
          description: check suites id
        internal:
          type: integer
          description: internal
        private:
          type: boolean
          description: is private
        unique_key:
          type: string
          description: unique key
    jobs:
      title: job list
      type: object
      description: job list
      properties:
        id:
          type: integer
          description: job id
        allow_failure:
          type: boolean
          description: allow_failure
        state:
          type: string
          description: job state
        started_at:
          type: integer
          description: starte time
        finished_at:
          type: integer
          description: finish time
        created_at:
          type: integer
          description: create time
        updated_at:
          type: integer
          description: update time
        deleted_at:
          type: integer
          description: delete time
        build_id:
          type: integer
          description: job build id
        build_log:
          type: string
          description: build log
        check_run_id:
          type: integer
          description: github check run id
        config:
          type: string
          description: config
        env_vars:
          type: string
          description: env vars
        container_config:
          type: string
          description: container config
    org:
      title: org
      description: ""
      type: object
      properties:
        id:
          type: integer
        git_type:
          type: string
        uid:
          type: integer
        name:
          type: string
        username:
          type: string
        email:
          type: string
          description: email
        pic:
          type: string
          description: pic url
        access_token:
          type: string
        refresh_token:
          type: string
        org_admin:
          type: string
          description: org admin
        type:
          type: string
          description: org or user
        installation_id:
          type: integer
          description: ""
    repos: {}
    repo-detail: {}
  requestBodies: {}
  securitySchemes:
    BearerToken:
      type: apiKey
      description: Bearer Token
      in: header
      name: Authorization
  links: {}
  callbacks: {}
security:
  - BearerToken: []
externalDocs:
  description: PCIT API
  url: "https://docs.ci.khs1994.com"
